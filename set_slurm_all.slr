#!/bin/bash
#
# Longleaf slurm submission script            
# execute as:                                           
#      sbatch set_slurm.slr <radius> <z Position> <detector ID> <Surface_Charge>
#       <energy in Kev><{0,1} (do_not/do write the density files) <{0,1} (do_not/do re-calculate field) <grid size>
#      MAKE SURE THAT ALL NUMBERS ARE AT TWO DECIMAL POINTS, GRID HAS TO BE TO FOUR DECIMALS
#      for example sbatch set_slurm_all.slr 15.00 0.10 P42575A 0.00 5000.00 0 1 0.0200
#      for example sbatch set_slurm_all.slr 15.00 0.10 OPPI 0.00 5000.00 0 1 0.0200
#     ICPC example sbatch set_slurm_all.slr 15.00 0.10 V01386A 0.00 5000.00 0 1 0.0200
# Check job status: squeue -u kbhimani (ONYEN)
#--------------------------------------------------------------------------      
#            
#SBATCH --job-name=khb-siggen2d
#SBATCH --output=/nas/longleaf/home/kbhimani/siggen_ccd/logs/job_log_.sh.o%j       
#SBATCH --error=/nas/longleaf/home/kbhimani/siggen_ccd/logs/job_error_log_.sh.o%j     
#                                                                                                  
# directories to put log files ... so you know what is happening to your jobs   
#                                                                  
#SBATCH --output=/nas/longleaf/home/kbhimani/siggen_ccd/logs/job_log_.sh.o%j       
#SBATCH --error=/nas/longleaf/home/kbhimani/siggen_ccd/logs/job_error_log_.sh.o%j     
#             
#SBATCH --partition=a100-gpu # a100-gpu or volta-gpu
#SBATCH --qos=gpu_access
#SBATCH --gres=gpu:1
# SBATCH --mem-per-cpu=32g
#SBATCH --time=6-00:00:00                                       
# set the time for your job here. Job will terminate if run time exceeds it.
#SBATCH --nodes=1
# uncomment the lines below to get email notification about your job                       
#SBATCH --mail-type=begin,end,fail
#SBATCH --mail-user=kevin_bhimani@unc.edu
#---------------------------------------------------------------------------   
source /nas/longleaf/home/kbhimani/.bash_profile

radius=$1 #make sure to keep these at 1 decimal point
zPos=$2
detector=$3
surface_charge=$4
energy=$5
save_rho=$6
self_repulsion=$7
grid=$8

config_file="config_files/$detector.config"
config_file_calc_wp="config_files/${detector}_calc_wp.config"

dir_save="/work/users/k/b/kbhimani/siggen_ccd_data"
dir_run="/nas/longleaf/home/kbhimani/siggen_ccd"

# e_vals=($(seq 1500.00 50.00 5500.00))
e_vals=(30.20 7.50)
r_vals=($(seq 0.00 1.00 30.00))
z_vals=($(seq 0.02 0.02 3.00))
# zPos_vals=(0.02 0.03 0.04 0.05 0.20 0.30 0.40 0.50 0.60 0.70 0.75 0.80 0.90 1.00 2.00 3.00)
surface_charge_vals=(-0.30 0.00 -0.1)
# grid_array=(0.0550 0.0600 0.0700 0.0800 0.0500 0.0300 0.0350 0.0400 0.0450 0.0500 0.0250 0.0200 0.0100 0.0050 0.0150)
# grid_array=($(seq 0.0100 0.0010 0.0250))
# grid_array=(0.0100 0.0150 0.0200 0.0250)

sim_count=0

for sur_ch in "${surface_charge_vals[@]}"
    do
    for e_var in "${e_vals[@]}"
        do
            echo "Calculating weighting potential at radius $radius and z position $zPos for detector $detector with surface charge $sur_ch with energy $e_var and grid $grid. Write densities=$save_rho and Self repulsion=$self_repulsion"
            $dir_run/ehdrift $config_file_calc_wp -a $radius -z $zPos -g $detector -s $sur_ch -e $e_var -v $save_rho -f $self_repulsion -h $grid 1> /dev/null
            for z_var in "${z_vals[@]}"
                do
                for r_var in "${r_vals[@]}"
                do
                    bash $dir_run/set_run.sh $r_var $z_var $detector $sur_ch $e_var $save_rho $self_repulsion $grid
                    sim_count=$((sim_count+1))
                done
            done
        done
    done


echo "Calculations finished. Number of sims ran was $sim_count!"
